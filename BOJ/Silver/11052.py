# 카드 구매하기 문제
# DP문제 너무 어렵다.... 규칙찾기 너무어렵다...

# 2차배열로 규칙을 찾고 , 1차배열로 줄여서 코드 작성

#

N = int(input())
lst = [0] + list(map(int,input().split()))

dp = [0] * (N+1)

for i in range(1,N+1):
    for j in range(1,N+1):
        if j-i >= 0:
            dp[j] = max(dp[j], dp[j-i]+lst[i])    
          
                        # dp[j] = [새로운 카드팩을 찾기전에 지불 최댓값 ( ex i = 2일때 ,2장의 카드를 구매하려고 할때 2번째 카드팩(5원)을 사용하기 전 최댓값)]

                        # dp[j-i]+lst[i] = [ex) i = 2 이면 , 2칸전의 값 + 2팩에 5원인 카드팩을 사용했을때]
        
print(dp[N])
# ______________
# ㅣ0 1 2 3 4
# ㅣ0 1 5 6 10
# ㅣ0 1 5 6 10
# ㅣ0 1 5 6 10
